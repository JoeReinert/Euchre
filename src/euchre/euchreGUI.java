/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package euchre;

import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author Joe
 */
public class euchreGUI extends javax.swing.JFrame {

    private Game game;
    private Timer discardTimer;
    public euchreGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        partnerPlayedCardIcon = new javax.swing.JLabel();
        playerPlayedCardIcon = new javax.swing.JLabel();
        opp1PlayedCardIcon = new javax.swing.JLabel();
        opp2PlayedCardIcon = new javax.swing.JLabel();
        deckCardIcon = new javax.swing.JLabel();
        partnerLabel = new javax.swing.JLabel();
        partnerIcon = new javax.swing.JLabel();
        deckLabel = new javax.swing.JLabel();
        opp1Label = new javax.swing.JLabel();
        playerCard3Icon = new javax.swing.JLabel();
        playerCard2Icon = new javax.swing.JLabel();
        playerCard1Icon = new javax.swing.JLabel();
        playerCard4Icon = new javax.swing.JLabel();
        playerCard5Icon = new javax.swing.JLabel();
        opp1Icon = new javax.swing.JLabel();
        opp2Label = new javax.swing.JLabel();
        opp2Icon = new javax.swing.JLabel();
        scoreInfoPanel = new javax.swing.JPanel();
        yourScoreLabel = new javax.swing.JLabel();
        oppScoreLabel = new javax.swing.JLabel();
        yourTrickCountLabel = new javax.swing.JLabel();
        oppTrickCountLabel = new javax.swing.JLabel();
        dealerPanel = new javax.swing.JPanel();
        currentDealerLabel = new javax.swing.JLabel();
        trumpButton = new javax.swing.JButton();
        passButton = new javax.swing.JButton();
        messagePanel = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        suit1Icon = new javax.swing.JLabel();
        suit2Icon = new javax.swing.JLabel();
        suit3Icon = new javax.swing.JLabel();
        trumpSuitLabel = new javax.swing.JLabel();
        trumpSuitIcon = new javax.swing.JLabel();
        rulesButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Euchre");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 102, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(237, 210));
        setMinimumSize(new java.awt.Dimension(237, 210));
        setResizable(false);

        backgroundPanel.setBackground(new java.awt.Color(0, 100, 0));
        backgroundPanel.setMaximumSize(new java.awt.Dimension(775, 500));
        backgroundPanel.setMinimumSize(new java.awt.Dimension(775, 500));
        backgroundPanel.setName(""); // NOI18N

        partnerPlayedCardIcon.setMaximumSize(new java.awt.Dimension(71, 96));
        partnerPlayedCardIcon.setMinimumSize(new java.awt.Dimension(71, 96));
        partnerPlayedCardIcon.setPreferredSize(new java.awt.Dimension(71, 96));

        playerPlayedCardIcon.setMaximumSize(new java.awt.Dimension(71, 96));
        playerPlayedCardIcon.setMinimumSize(new java.awt.Dimension(71, 96));
        playerPlayedCardIcon.setPreferredSize(new java.awt.Dimension(71, 96));

        opp1PlayedCardIcon.setMaximumSize(new java.awt.Dimension(71, 96));
        opp1PlayedCardIcon.setMinimumSize(new java.awt.Dimension(71, 96));
        opp1PlayedCardIcon.setPreferredSize(new java.awt.Dimension(71, 96));

        opp2PlayedCardIcon.setMaximumSize(new java.awt.Dimension(71, 96));
        opp2PlayedCardIcon.setMinimumSize(new java.awt.Dimension(71, 96));
        opp2PlayedCardIcon.setPreferredSize(new java.awt.Dimension(71, 96));

        deckCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/b1fv.png"))); // NOI18N

        partnerLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        partnerLabel.setForeground(new java.awt.Color(220, 220, 220));
        partnerLabel.setText("Partner");

        partnerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/partner.png"))); // NOI18N

        deckLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        deckLabel.setForeground(new java.awt.Color(222, 222, 222));
        deckLabel.setText("Deck");

        opp1Label.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        opp1Label.setForeground(new java.awt.Color(222, 222, 222));
        opp1Label.setText("Opponent 1");

        playerCard3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/b1fv.png"))); // NOI18N
        playerCard3Icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playerCard3IconMouseClicked(evt);
            }
        });

        playerCard2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/b1fv.png"))); // NOI18N
        playerCard2Icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playerCard2IconMouseClicked(evt);
            }
        });

        playerCard1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/b1fv.png"))); // NOI18N
        playerCard1Icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playerCard1IconMouseClicked(evt);
            }
        });

        playerCard4Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/b1fv.png"))); // NOI18N
        playerCard4Icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playerCard4IconMouseClicked(evt);
            }
        });

        playerCard5Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/b1fv.png"))); // NOI18N
        playerCard5Icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playerCard5IconMouseClicked(evt);
            }
        });

        opp1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/player.png"))); // NOI18N

        opp2Label.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        opp2Label.setForeground(new java.awt.Color(222, 222, 222));
        opp2Label.setText("Opponent 2");

        opp2Icon.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        opp2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/player.png"))); // NOI18N

        scoreInfoPanel.setBackground(new java.awt.Color(160, 160, 160));
        scoreInfoPanel.setMaximumSize(new java.awt.Dimension(130, 100));
        scoreInfoPanel.setMinimumSize(new java.awt.Dimension(130, 100));
        scoreInfoPanel.setPreferredSize(new java.awt.Dimension(130, 100));

        yourScoreLabel.setForeground(new java.awt.Color(0, 0, 0));
        yourScoreLabel.setText("Your Score: 0");

        oppScoreLabel.setForeground(new java.awt.Color(0, 0, 0));
        oppScoreLabel.setText("Opp Score: 0");

        yourTrickCountLabel.setForeground(new java.awt.Color(0, 0, 0));
        yourTrickCountLabel.setText("Your Trick Count: 0");

        oppTrickCountLabel.setForeground(new java.awt.Color(0, 0, 0));
        oppTrickCountLabel.setText("Opp Trick Count: 0");

        javax.swing.GroupLayout scoreInfoPanelLayout = new javax.swing.GroupLayout(scoreInfoPanel);
        scoreInfoPanel.setLayout(scoreInfoPanelLayout);
        scoreInfoPanelLayout.setHorizontalGroup(
            scoreInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scoreInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yourScoreLabel)
                    .addComponent(oppScoreLabel)
                    .addComponent(yourTrickCountLabel)
                    .addComponent(oppTrickCountLabel))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        scoreInfoPanelLayout.setVerticalGroup(
            scoreInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(yourScoreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oppScoreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yourTrickCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oppTrickCountLabel)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        dealerPanel.setBackground(new java.awt.Color(10, 10, 10));
        dealerPanel.setMinimumSize(new java.awt.Dimension(130, 100));
        dealerPanel.setPreferredSize(new java.awt.Dimension(130, 28));

        currentDealerLabel.setForeground(new java.awt.Color(222, 222, 222));
        currentDealerLabel.setText("Dealer: You");

        javax.swing.GroupLayout dealerPanelLayout = new javax.swing.GroupLayout(dealerPanel);
        dealerPanel.setLayout(dealerPanelLayout);
        dealerPanelLayout.setHorizontalGroup(
            dealerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dealerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentDealerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dealerPanelLayout.setVerticalGroup(
            dealerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dealerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentDealerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        trumpButton.setEnabled(false);
        trumpButton.setLabel("Pick It Up");
        trumpButton.setMaximumSize(new java.awt.Dimension(130, 32));
        trumpButton.setMinimumSize(new java.awt.Dimension(130, 32));
        trumpButton.setPreferredSize(new java.awt.Dimension(130, 32));
        trumpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trumpButtonActionPerformed(evt);
            }
        });

        passButton.setText("Pass");
        passButton.setEnabled(false);
        passButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passButtonActionPerformed(evt);
            }
        });

        messagePanel.setPreferredSize(new java.awt.Dimension(220, 28));

        messageLabel.setText("Game has started");

        javax.swing.GroupLayout messagePanelLayout = new javax.swing.GroupLayout(messagePanel);
        messagePanel.setLayout(messagePanelLayout);
        messagePanelLayout.setHorizontalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );
        messagePanelLayout.setVerticalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        suit1Icon.setMaximumSize(new java.awt.Dimension(60, 60));
        suit1Icon.setMinimumSize(new java.awt.Dimension(60, 60));
        suit1Icon.setPreferredSize(new java.awt.Dimension(60, 60));
        suit1Icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suit1IconMouseClicked(evt);
            }
        });

        suit2Icon.setMaximumSize(new java.awt.Dimension(60, 60));
        suit2Icon.setMinimumSize(new java.awt.Dimension(60, 60));
        suit2Icon.setPreferredSize(new java.awt.Dimension(60, 60));
        suit2Icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suit2IconMouseClicked(evt);
            }
        });

        suit3Icon.setMaximumSize(new java.awt.Dimension(60, 60));
        suit3Icon.setMinimumSize(new java.awt.Dimension(60, 60));
        suit3Icon.setPreferredSize(new java.awt.Dimension(60, 60));
        suit3Icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suit3IconMouseClicked(evt);
            }
        });

        trumpSuitLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        trumpSuitLabel.setForeground(new java.awt.Color(222, 222, 222));
        trumpSuitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        trumpSuitLabel.setMaximumSize(new java.awt.Dimension(96, 24));
        trumpSuitLabel.setMinimumSize(new java.awt.Dimension(96, 24));
        trumpSuitLabel.setPreferredSize(new java.awt.Dimension(96, 24));

        trumpSuitIcon.setMaximumSize(new java.awt.Dimension(60, 60));
        trumpSuitIcon.setMinimumSize(new java.awt.Dimension(60, 60));
        trumpSuitIcon.setPreferredSize(new java.awt.Dimension(60, 60));

        rulesButton.setText("Rules");
        rulesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rulesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(rulesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(partnerLabel)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                                .addComponent(partnerIcon)
                                .addGap(12, 12, 12)))
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(suit1Icon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(suit2Icon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(suit3Icon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))
                            .addComponent(messagePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addComponent(opp1Label)
                                .addGap(236, 236, 236))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(opp1Icon))
                                            .addComponent(trumpSuitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(trumpSuitIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(opp1PlayedCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(deckCardIcon)
                                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                                .addGap(11, 11, 11)
                                                .addComponent(deckLabel)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(passButton)
                                            .addComponent(trumpButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(playerCard1Icon)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(playerCard2Icon)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addComponent(partnerPlayedCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(opp2Label, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                                        .addComponent(opp2Icon)
                                        .addGap(30, 30, 30))))
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                                        .addComponent(playerCard3Icon)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(playerCard4Icon)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(playerCard5Icon))
                                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                                        .addComponent(playerPlayedCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(opp2PlayedCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dealerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(scoreInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(partnerLabel)
                            .addComponent(rulesButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(partnerIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(messagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suit1Icon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suit2Icon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suit3Icon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(44, 44, 44)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(opp1Label)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(opp1Icon)
                                .addGap(18, 18, 18)
                                .addComponent(trumpSuitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(trumpSuitIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(opp1PlayedCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(partnerPlayedCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerPlayedCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(opp2Label)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(opp2Icon))
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(opp2PlayedCardIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addComponent(deckLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deckCardIcon)
                            .addComponent(playerCard3Icon)
                            .addComponent(playerCard2Icon)
                            .addComponent(playerCard1Icon)
                            .addComponent(playerCard4Icon)
                            .addComponent(playerCard5Icon)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addComponent(dealerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scoreInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addComponent(passButton)
                        .addGap(18, 18, 18)
                        .addComponent(trumpButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passButtonActionPerformed
        trumpButton.setText("Select Trump");
        disableButtons();
        updateMessageLabel("You have chosen to pass");
        if(game.getState().equals("Pick it up"))
            System.out.println("You have chosen to pass");
        else if(game.getState().equals("Select Trump")) 
            System.out.println("You have chosen to pass again");
        game.playerPassed();
        game.setWaiting(false);
        game.passOrPlay();
    }//GEN-LAST:event_passButtonActionPerformed

    private void trumpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trumpButtonActionPerformed
        game.getPlayerTeam().calledTrump();
        if(game.getState().equals("Pick it up")) { //Shown card suit becomes trump
            System.out.println("Attempting to make trump suit " + game.getShownCard().getSuitString()); //Remove after debugging
            newTrumpInfo(game.getShownCard().getSuitString()); //Shown card suit becomes trump label
            game.getRound().setTrump(game.getShownCard().getSuitString());
            updateMessageLabel("You have chosen \"Pick it up\"");
            if(game.getRound().getDealerPosition()!=1) { //If the dealer is a computer, don't trigger the waiting boolean
                game.setWaiting(false);
                game.pickItUp();
                game.beginRound();
                game.playLoop();
            }
            else { //If the dealer is the player, set to waiting so they may discard from their hand
                game.setWaiting(true);
                game.setPlayerDiscarding(true);
                game.pickItUp();
                ActionListener taskPerformed = new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        if(!game.getWaiting()) {
                            discardTimer.stop();
                            game.beginRound();
                            game.playLoop();
                        }
                        else
                            System.out.println("Waiting for you to discard");
                    }
                };
                discardTimer = new Timer(2000, taskPerformed);
                discardTimer.start();
            }
        }
        else { //Player chooses 
            switch(game.getShownCard().getSuit()) {
                case 0:
                    suit1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Diamonds.png")));
                    suit2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Hearts.png")));
                    suit3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Clubs.png")));
                    break;
                case 1:
                    suit1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Spades.png")));
                    suit2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Hearts.png")));
                    suit3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Clubs.png")));
                    break;
                case 2:
                    suit1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Spades.png")));
                    suit2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Diamonds.png")));
                    suit3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Clubs.png")));
                    break;
                case 3:
                    suit1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Spades.png")));
                    suit2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Diamonds.png")));
                    suit3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/Hearts.png")));
                    break;
                default:
                    break;
            }
        }        
        disableButtons();
    }//GEN-LAST:event_trumpButtonActionPerformed

    private void playerCard3IconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerCard3IconMouseClicked
        cardClicked(2);
    }//GEN-LAST:event_playerCard3IconMouseClicked

    private void playerCard1IconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerCard1IconMouseClicked
        cardClicked(0);
    }//GEN-LAST:event_playerCard1IconMouseClicked

    private void playerCard2IconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerCard2IconMouseClicked
        cardClicked(1);
    }//GEN-LAST:event_playerCard2IconMouseClicked

    private void playerCard4IconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerCard4IconMouseClicked
        cardClicked(3);
    }//GEN-LAST:event_playerCard4IconMouseClicked

    private void playerCard5IconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerCard5IconMouseClicked
       cardClicked(4);
    }//GEN-LAST:event_playerCard5IconMouseClicked

    private void suit1IconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suit1IconMouseClicked
        suitSelected(0);
    }//GEN-LAST:event_suit1IconMouseClicked

    private void suit2IconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suit2IconMouseClicked
        suitSelected(1);
    }//GEN-LAST:event_suit2IconMouseClicked

    private void suit3IconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suit3IconMouseClicked
        suitSelected(2);
    }//GEN-LAST:event_suit3IconMouseClicked

    private void rulesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rulesButtonActionPerformed
        try {
           Desktop.getDesktop().browse(new URL("https://en.wikipedia.org/wiki/Euchre").toURI());
       } catch (MalformedURLException ex) {
           Logger.getLogger(setupFrame.class.getName()).log(Level.SEVERE, null, ex);
       } catch (URISyntaxException ex) {
           Logger.getLogger(setupFrame.class.getName()).log(Level.SEVERE, null, ex);
       } catch (IOException ex) {
           Logger.getLogger(setupFrame.class.getName()).log(Level.SEVERE, null, ex);
       } 
    }//GEN-LAST:event_rulesButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(euchreGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(euchreGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(euchreGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(euchreGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new euchreGUI().setVisible(true);
            }
        });
    }
    
    public void setGame(Game g) {
        game = g;
    }
    
    public void updateScores() {
        yourScoreLabel.setText("Your Score: " + game.getPlayerTeam().getScore());
        oppScoreLabel.setText("Opp Score: " + game.getOppTeam().getScore());
    }
    public void updateTrickCounts() {
        yourTrickCountLabel.setText("Your Trick Count: " + game.getPlayerTeam().getTrickCount());
        oppTrickCountLabel.setText("Opp Trick Count: " + game.getOppTeam().getTrickCount());
    }
    public void redrawTable() {
        playerCard1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getPlayerCard(0).getImage())));
        playerCard2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getPlayerCard(1).getImage())));
        playerCard3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getPlayerCard(2).getImage())));
        playerCard4Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getPlayerCard(3).getImage())));
        playerCard5Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getPlayerCard(4).getImage())));
        deckCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getShownCard().getImage())));
        clearPlayedCards();
        trumpButton.setText("Pick it up");
        trumpSuitIcon.setIcon(null);
        trumpSuitLabel.setText(null);
    }
    public void updateDealer() {
        switch(game.getRound().getDealerPosition()) {
            case 1: currentDealerLabel.setText("Dealer: You");
                    break;
            case 2: currentDealerLabel.setText("Dealer: Opponent 1");
                    break;
            case 3: currentDealerLabel.setText("Dealer: Partner");
                    break;
            case 4: currentDealerLabel.setText("Dealer: Opponent 2");
                    break;
        }
    }
    public void discardDraw() {
        deckCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/b1fv.png")));
    }
    public void updateMessageLabel(String s) {
        messageLabel.setText(s);
    }
    public void enableButtons() {
        trumpButton.setEnabled(true);
        passButton.setEnabled(true);
    }
    public void disableButtons() {
        trumpButton.setEnabled(false);
        passButton.setEnabled(false);
    }
    public void drawComputerPlayedCard(int a, Card c) {
        switch(a) {
            case 2:
                opp1PlayedCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource(c.getImage())));
                break;
            case 3:
                partnerPlayedCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource(c.getImage())));
                break;
            case 4:
                opp2PlayedCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource(c.getImage())));
                break;
        }
    }
    public void cardClicked(int a) {
        if(game.getWaiting()) { //If currently waiting for player input
            if(game.getState().equals("Playing")) { //Must be in playing phase to play card
                if(game.checkPlayerCard(a) && !game.getPlayerTeam().getPlayer1().getPlayed(a)) { //Checks to see if card played is correct suit
                    switch(a) {
                        case 0:
                            playerCard1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
                            break;
                        case 1:
                            playerCard2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
                            break;
                        case 2:
                            playerCard3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
                            break;
                        case 3:
                            playerCard4Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
                            break;
                        case 4:
                            playerCard5Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
                            break;
                    }
                    updateMessageLabel("You played the " + game.getPlayerCard(a).toString());
                    playerPlayedCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getPlayerCard(a).getImage())));
                    game.getRound().getTrick().playCard(1, game.getPlayerTeam().getPlayer1().getCard(a));
                    game.getPlayerTeam().getPlayer1().removeCard(a);
                    game.playerPlayed();
                    game.setWaiting(false);
                    game.playLoop();
                }
                else
                    updateMessageLabel("Please pick a different card");
            }
            else if(game.getState().equals("Discarding")) { //Discarding state
                switch(a) { //Draws shown card where selected card from hand previously was
                    case 0:
                        playerCard1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getRound().getShownCard().getImage())));
                        break;
                    case 1:
                        playerCard2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getRound().getShownCard().getImage())));
                        break;
                    case 2:
                        playerCard3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getRound().getShownCard().getImage())));
                        break;
                    case 3:
                        playerCard4Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getRound().getShownCard().getImage())));
                        break;
                    case 4:
                        playerCard5Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource(game.getRound().getShownCard().getImage())));
                        break;
                }
                game.getPlayerTeam().getPlayer1().setCard(game.getRound().getShownCard(), a); //Replaces selected card in hand with shown card on deck
                discardDraw(); //Redraws shown card as flipped over
                game.setWaiting(false); //Sets waiting to false so timer can execute
                if(!game.getPlayerDiscarding())
                    game.passOrPlay();
                game.setPlayerDiscarding(false);
            }
        }
    }
    public void suitSelected(int a) {
        int trumpSuit = 0;
        int shownSuit = game.getRound().getShownCard().getSuit();
        switch(shownSuit) {
            case 0:
                trumpSuit = a + 1;
                break;
            case 1:
                if(a==0)
                    trumpSuit = 0;
                else
                    trumpSuit = a + 1;
                break;
            case 2:
                if(a<2)
                    trumpSuit = a;
                else
                    trumpSuit = 3;
                break;
            case 3:
                trumpSuit = a;
                break;
        }        
        String trumpSuitString = "";
        switch(trumpSuit) {
            case 0:
                trumpSuitString = "Spades";
                break;
            case 1:
                trumpSuitString = "Diamonds";
                break;
            case 2:
                trumpSuitString = "Hearts";
                break;
            case 3:
                trumpSuitString = "Clubs";
                break;
        }
        game.getRound().setTrump(trumpSuitString);
        game.setWaiting(false);
        suit1Icon.setIcon(null);
        suit2Icon.setIcon(null);
        suit3Icon.setIcon(null);
        suit1Icon.setPreferredSize(new java.awt.Dimension(60,60));
        suit2Icon.setPreferredSize(new java.awt.Dimension(60,60));
        suit2Icon.setPreferredSize(new java.awt.Dimension(60,60));
        newTrumpInfo(game.getRound().getTrump());
        game.beginRound();
        game.playLoop();
    }
    public void newTrumpInfo(String suit) {
        trumpSuitIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/" + suit + ".png")));
        trumpSuitLabel.setText("Trump");
    }
    public void clearPlayedCards() {
        playerPlayedCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
        opp1PlayedCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
        partnerPlayedCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
        opp2PlayedCardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/euchre/blank.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel currentDealerLabel;
    private javax.swing.JPanel dealerPanel;
    private javax.swing.JLabel deckCardIcon;
    private javax.swing.JLabel deckLabel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JPanel messagePanel;
    private javax.swing.JLabel opp1Icon;
    private javax.swing.JLabel opp1Label;
    private javax.swing.JLabel opp1PlayedCardIcon;
    private javax.swing.JLabel opp2Icon;
    private javax.swing.JLabel opp2Label;
    private javax.swing.JLabel opp2PlayedCardIcon;
    private javax.swing.JLabel oppScoreLabel;
    private javax.swing.JLabel oppTrickCountLabel;
    private javax.swing.JLabel partnerIcon;
    private javax.swing.JLabel partnerLabel;
    private javax.swing.JLabel partnerPlayedCardIcon;
    private javax.swing.JButton passButton;
    private javax.swing.JLabel playerCard1Icon;
    private javax.swing.JLabel playerCard2Icon;
    private javax.swing.JLabel playerCard3Icon;
    private javax.swing.JLabel playerCard4Icon;
    private javax.swing.JLabel playerCard5Icon;
    private javax.swing.JLabel playerPlayedCardIcon;
    private javax.swing.JButton rulesButton;
    private javax.swing.JPanel scoreInfoPanel;
    private javax.swing.JLabel suit1Icon;
    private javax.swing.JLabel suit2Icon;
    private javax.swing.JLabel suit3Icon;
    private javax.swing.JButton trumpButton;
    private javax.swing.JLabel trumpSuitIcon;
    private javax.swing.JLabel trumpSuitLabel;
    private javax.swing.JLabel yourScoreLabel;
    private javax.swing.JLabel yourTrickCountLabel;
    // End of variables declaration//GEN-END:variables
}
